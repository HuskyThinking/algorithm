package net.husky.array;

/**
 * @ClassName: BitTest
 * @Description: 位运算
 * @Author: Fisher
 * @Date: 2022/9/25 14:38
 **/
public class BitTest {


    /**
     * 位运算符：直接对整数的二进制进行运算
     * 1.左移 <<：空位补0，最高位被丢弃 每左移一位相当于乘以2
     * 2.右移 >>：每右移一位相当于除以2
     *          负数 空位补1
     *          正数 空位补0
     * 3.无符号右移 >>>：
     *          都补0
     *
     * 正数：反码、补码都与原码一样
     * 负数：
     *      反码 原码中除去符号位，其他的数值位按位取反，即0变1，1变0
     *      补码 反码 + 1
     *      例子：-107
     *           原码 1110 1011
     *           反码 1001 0100
     *           补码 1001 0101
     * 正数与负数运算：4 + (-107)
     *              0000 0100     4(补码)
     *              1001 0101    -107(补码)
     *              1001 1001    补码
     *              1001 1000    反码
     *              1110 0111    -103原码
     *
     */
    public static void main(String[] args) {

    }

}
